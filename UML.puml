@startuml
class main.GamePanel {
- int screenWidth
- int screenHeight
- int playerX
- int playerY
- int blockSize
- int screenWidthBlocks
- int screenHeightBlocks
- char[][] mapPattern
- int currentLevel
- ArrayList<Bullet> bullets
- {static} ArrayList<Ghost> ghosts
- Direction playerDirection
- {static} ArrayList<Pair<Integer,Integer>> spawnablePosition
~ Media buzzer
~ MediaPlayer mediaPlayer
- int currentPoint
~ Image pacmanUp
~ Image pacmanDown
~ Image pacmanLeft
~ Image pacmanRight
- Image currentPacmanImage
~ Image wall
~ Image whiteDot
~ Image bulletRight
~ Image bulletUp
~ Image bulletLeft
~ Image bulletDown
~ Image redGhost
- long startTimeNano
- void spawnGhost()
- void updateSpawnablePosition()
- void updateMap(int)
- void movePlayer(int,int)
- void repaint()
- void updateDirection(int,int)
- void updateBullets()
- boolean bulletHitsWall(int,int)
- void shootBullet()
- void updateBulletGhostCollisions()
+ int getScreenWidth()
+ void setScreenWidth(int)
+ int getScreenHeight()
+ void setScreenHeight(int)
+ int getPlayerX()
+ void setPlayerX(int)
+ int getPlayerY()
+ void setPlayerY(int)
+ int getBlockSize()
+ int getScreenWidthBlocks()
+ int getScreenHeightBlocks()
+ char[][] getMapPattern()
+ void setMapPattern(char[][])
+ int getCurrentLevel()
+ void setCurrentLevel(int)
+ ArrayList<Bullet> getBullets()
+ void setBullets(ArrayList<Bullet>)
+ Direction getPlayerDirection()
+ void setPlayerDirection(Direction)
+ {static} ArrayList<Pair<Integer,Integer>> getSpawnablePosition()
+ void setSpawnablePosition(ArrayList<Pair<Integer,Integer>>)
+ {static} ArrayList<Ghost> getGhosts()
+ void setGhosts(ArrayList<Ghost>)
+ int getCurrentPoint()
+ void setCurrentPoint(int)
}
class logic.ChangeMap {
}
class map.levelMap {
- {static} char[][] mapPattern
- {static} ArrayList<Pair<Integer,Integer>> pos
- {static} ArrayList<Pair<Integer,Integer>> updateEmptyPosition()
- {static} ArrayList<Pair<Integer,Integer>> getCurrentPosition()
+ {static} char[][] getMapPattern()
+ {static} void setMapPattern(char[][])
+ {static} ArrayList<Pair<Integer,Integer>> getPos()
+ {static} void setPos(ArrayList<Pair<Integer,Integer>>)
}
class map.level5 {
- {static} char[][] mapPattern
+ {static} char[][] getMapPattern()
+ {static} void setMapPattern(char[][])
}
class ghost.Ghost {
- int x
- int y
- int speed
+ int getX()
+ void setX(int)
+ int getY()
+ void setY(int)
+ int getSpeed()
+ void setSpeed(int)
}
class object.Bullet {
- int x
- int y
- Direction direction
+ void move(int)
+ int getX()
+ int getY()
+ Direction getDirection()
}
class logic.GhostSpawner {
~ {static} ArrayList<Pair<Integer,Integer>> spawnablePosition
~ {static} ArrayList<Ghost> ghosts
+ {static} ArrayList<Ghost> spawnGhost()
}
class logic.GameInstance {
}
class ghost.SpeedyGhost {
}
class component.RetroFont {
}
class component.SupermarketFont {
}
enum object.Direction {
+  UP
+  DOWN
+  LEFT
+  RIGHT
}
class map.level2 {
- {static} char[][] mapPattern
+ {static} char[][] getMapPattern()
+ {static} void setMapPattern(char[][])
}
class scene.HomeScreen {
- Stage stage
- {static} Scene scene
- {static} StackPane root
- VBox buttonContainer
- SupermarketFont title
- BBFont title2
- GameButton playButton
- GameButton tutorialButton
- GameButton creditButton
- GameButton quitButton
- boolean fullScreen
- Color buttonColor
- void componentSetup(GameInstance)
- void eventSetup(GameInstance)
- void stageSetup()
+ {static} StackPane getRoot()
+ {static} Scene getScene()
}
class map.level4 {
- {static} char[][] mapPattern
+ {static} char[][] getMapPattern()
+ {static} void setMapPattern(char[][])
}
class map.level1 {
- {static} char[][] mapPattern
+ {static} char[][] getMapPattern()
+ {static} void setMapPattern(char[][])
}
class component.BBFont {
}
class map.level3 {
- {static} char[][] mapPattern
+ {static} char[][] getMapPattern()
+ {static} void setMapPattern(char[][])
}
class scene.LoadingScreen {
- ImageView imageView
+ void initialize(URL,ResourceBundle)
}
class component.GameButton {
- Rectangle background
+ void addText(String,int,Paint)
+ void setColor(Paint)
}
class main.Main {
+ void start(Stage)
+ {static} void main(String[])
}
class component.TekoFont {
}


javafx.scene.layout.Pane <|-- main.GamePanel
map.levelMap <|-- map.level5
ghost.Ghost <|-- ghost.SpeedyGhost
javafx.scene.text.Text <|-- component.RetroFont
javafx.scene.text.Text <|-- component.SupermarketFont
map.levelMap <|-- map.level2
map.levelMap <|-- map.level4
map.levelMap <|-- map.level1
javafx.scene.text.Text <|-- component.BBFont
map.levelMap <|-- map.level3
javafx.fxml.Initializable <|.. scene.LoadingScreen
javafx.scene.layout.StackPane <|-- component.GameButton
javafx.application.Application <|-- main.Main
javafx.scene.text.Text <|-- component.TekoFont
@enduml